version: '3.9'

services:

  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PHP_VERSION: "${PHP_VERSION:-7.4.30}"
        NODE_VERSION: "${NODE_VERSION:-16.15.1}"
        PORT: "${PORT:-9000}"
    # command: php artisan serve --host=0.0.0.0 --port=8080
    image: ${APP_NAME:-wdt-api-assessment-marketplace}.test/php
    container_name: "${APP_NAME:-wdt-api-assessment-marketplace}-app"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - webserver
      - db

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${APP_URL:-wdt-api-assessment-marketplace-webserver}"
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_HTTP_LOCAL_PORT:-80}:${APP_HTTP_PORT:-80}"
      - "${APP_HTTPS_LOCAL_PORT:-443}:${APP_HTTPS_PORT:-443}"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/public:ro
      - ./storage/app:/var/www/storage/app:ro
    networks:
      - app-network

  # MySQL Service
  db:
    image: "mariadb:${MARIADB_VERSION:-10.4.22}"
    container_name: "${DB_HOST:-wdt-api-assessment-marketplace-db}"
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_LOCAL_PORT:-3306}:${DB_PORT:-3306}"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-secret}"
      MYSQL_DATABASE: "${DB_DATABASE:-wdt-api-assessment-marketplace}"
      MYSQL_USER: "${DB_USERNAME:-root}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-secret}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
